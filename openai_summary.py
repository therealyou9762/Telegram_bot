import os
import logging
from telegram.ext import Application, CommandHandler, ContextTypes
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from database import add_keyword, get_keywords, add_category, get_categories, add_news, get_news
from newsapi import search_news

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
if not TOKEN:
    logger.error("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    url = f"https://telegr77-6209977497ad.herokuapp.com/?user_id={user_id}"
    keyboard = [[InlineKeyboardButton("üåê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url=url)]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "<b>–ü—Ä–∏–≤–µ—Ç!</b> –Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.\n\n"
        "–í–æ—Ç –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã:\n"
        "üîë /–¥–æ–±–∞–≤–∏—Ç—å_—Å–ª–æ–≤–æ <—Å–ª–æ–≤–æ> <–∫–∞—Ç–µ–≥–æ—Ä–∏—è> ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ\n"
        "üìã /–∫–ª—é—á–µ–≤—ã–µ_—Å–ª–æ–≤–∞ ‚Äî —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤\n"
        "üìÇ /–¥–æ–±–∞–≤–∏—Ç—å_–∫–∞—Ç–µ–≥–æ—Ä–∏—é <–∫–∞—Ç–µ–≥–æ—Ä–∏—è> ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é\n"
        "üóÇÔ∏è /–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ‚Äî —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π\n"
        "üì∞ /–Ω–æ–≤–æ—Å—Ç–∏ <—Å–ª–æ–≤–æ> ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º\n"
        "üåê /—Å–∞–π—Ç ‚Äî –æ—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç—è–º–∏\n\n"
        "–î–ª—è —É–¥–æ–±–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç—è–º–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ.",
        reply_markup=reply_markup,
        parse_mode='HTML'
    )

async def –¥–æ–±–∞–≤–∏—Ç—å_—Å–ª–æ–≤–æ_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if len(context.args) < 2:
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /–¥–æ–±–∞–≤–∏—Ç—å_—Å–ª–æ–≤–æ <—Å–ª–æ–≤–æ> <–∫–∞—Ç–µ–≥–æ—Ä–∏—è>")
        return
    word, category = context.args[0], " ".join(context.args[1:])
    add_keyword(word, category)
    await update.message.reply_text(f"üîë –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ <b>{word}</b> –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é <b>{category}</b>.", parse_mode='HTML')

async def –∫–ª—é—á–µ–≤—ã–µ_—Å–ª–æ–≤–∞_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keywords = get_keywords()
    if not keywords:
        await update.message.reply_text("üîë –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")
        return
    msg = "\n".join([f"‚Ä¢ <b>{kw['word']}</b> ‚Äî {kw['category']}" for kw in keywords])
    user_id = update.effective_user.id
    url = f"https://telegr77-6209977497ad.herokuapp.com/?user_id={user_id}"
    keyboard = [[InlineKeyboardButton("üåê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url=url)]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        f"üìã –í–∞—à–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:\n{msg}",
        reply_markup=reply_markup,
        parse_mode='HTML'
    )

async def –¥–æ–±–∞–≤–∏—Ç—å_–∫–∞—Ç–µ–≥–æ—Ä–∏—é_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /–¥–æ–±–∞–≤–∏—Ç—å_–∫–∞—Ç–µ–≥–æ—Ä–∏—é <–∫–∞—Ç–µ–≥–æ—Ä–∏—è>")
        return
    name = " ".join(context.args)
    add_category(name)
    await update.message.reply_text(f"üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è <b>{name}</b> –¥–æ–±–∞–≤–ª–µ–Ω–∞.", parse_mode='HTML')

async def –∫–∞—Ç–µ–≥–æ—Ä–∏–∏_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    categories = get_categories()
    if not categories:
        await update.message.reply_text("üóÇÔ∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")
        return
    msg = "\n".join([f"‚Ä¢ <b>{cat['name']}</b>" for cat in categories])
    user_id = update.effective_user.id
    url = f"https://telegr77-6209977497ad.herokuapp.com/?user_id={user_id}"
    keyboard = [[InlineKeyboardButton("üåê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url=url)]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        f"üóÇÔ∏è –í–∞—à–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:\n{msg}",
        reply_markup=reply_markup,
        parse_mode='HTML'
    )

async def –Ω–æ–≤–æ—Å—Ç–∏_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        kw_list = context.args if context.args else ["–†–æ—Å—Å–∏—è"]
        news_list = search_news(kw_list)
        if not news_list:
            await update.message.reply_text("üì∞ –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            return

        for news in news_list:
            add_news(
                news['title'],
                news['url'],
                news.get('description', ''),
                news.get('category', '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'),
                news['published_at']
            )
            message = (
                f"<b>{news['title']}</b>\n"
                f"{news.get('description', '')}\n"
                f"<a href=\"{news['url']}\">–ß–∏—Ç–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ</a>\n"
                f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {news.get('category', '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')}\n"
                f"–î–∞—Ç–∞: {news['published_at']}\n"
            )
            await update.message.reply_text(message, parse_mode='HTML')

    except Exception as e:
        logger.exception("–û—à–∏–±–∫–∞ –≤ –Ω–æ–≤–æ—Å—Ç–∏_cmd")
        await update.message.reply_text(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")

async def —Å–∞–π—Ç_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    url = f"https://telegr77-6209977497ad.herokuapp.com/?user_id={user_id}"
    keyboard = [[InlineKeyboardButton("üåê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url=url)]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "üåê –î–ª—è —É–¥–æ–±–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç—è–º–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Å–∞–π—Ç–æ–º:",
        reply_markup=reply_markup
    )

def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("–¥–æ–±–∞–≤–∏—Ç—å_—Å–ª–æ–≤–æ", –¥–æ–±–∞–≤–∏—Ç—å_—Å–ª–æ–≤–æ_cmd))
    app.add_handler(CommandHandler("–∫–ª—é—á–µ–≤—ã–µ_—Å–ª–æ–≤–∞", –∫–ª—é—á–µ–≤—ã–µ_—Å–ª–æ–≤–∞_cmd))
    app.add_handler(CommandHandler("–¥–æ–±–∞–≤–∏—Ç—å_–∫–∞—Ç–µ–≥–æ—Ä–∏—é", –¥–æ–±–∞–≤–∏—Ç—å_–∫–∞—Ç–µ–≥–æ—Ä–∏—é_cmd))
    app.add_handler(CommandHandler("–∫–∞—Ç–µ–≥–æ—Ä–∏–∏", –∫–∞—Ç–µ–≥–æ—Ä–∏–∏_cmd))
    app.add_handler(CommandHandler("–Ω–æ–≤–æ—Å—Ç–∏", –Ω–æ–≤–æ—Å—Ç–∏_cmd))
    app.add_handler(CommandHandler("—Å–∞–π—Ç", —Å–∞–π—Ç_cmd))
    logger.info("Starting bot polling...")
    app.run_polling()

if __name__ == "__main__":
    main()
